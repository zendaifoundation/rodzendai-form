import 'dart:developer';

import 'package:flutter/material.dart';
import 'package:google_maps_flutter/google_maps_flutter.dart';

class RegisterProvider extends ChangeNotifier {
  TextEditingController _registerPickupLocationController =
      TextEditingController();
  TextEditingController get registerPickupLocationController =>
      _registerPickupLocationController;

  GoogleMapController? _googleMapController;
  GoogleMapController? get googleMapController => _googleMapController;

  LatLng _currentLocation = LatLng(13.7563, 100.5018); // ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø
  LatLng get currentLocation => _currentLocation;

  Set<Marker> _registerMarkers = {};
  Set<Marker> get registerMarkers => _registerMarkers;

  LatLng? _selectedLocation;
  LatLng? get selectedLocation => _selectedLocation;

  void onRequestRegister() {
    //todo
  }

  void onMapCreated(GoogleMapController controller) {
    _googleMapController = controller;
  }

  /// ‡∏õ‡∏±‡∏Å‡∏´‡∏°‡∏∏‡∏î‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÅ‡∏ï‡∏∞‡∏ó‡∏µ‡πà‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
  void onMapTap(LatLng location) {
    log('üó∫Ô∏è Map tapped at: ${location.latitude}, ${location.longitude}');

    // ‡πÄ‡∏Å‡πá‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    _selectedLocation = location;

    // ‡∏•‡∏ö‡∏´‡∏°‡∏∏‡∏î‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏∏‡∏î‡πÉ‡∏´‡∏°‡πà
    _registerMarkers = {
      Marker(
        markerId: MarkerId('pickup_location'),
        position: location,
        infoWindow: InfoWindow(
          snippet:
              '${location.latitude.toStringAsFixed(6)}, ${location.longitude.toStringAsFixed(6)}',
        ),
        icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueRed),
        draggable: true,
        onDragEnd: (newPosition) {
          onMarkerDragEnd(newPosition);
        },
      ),
    };

    log('üìç Marker created at: ${location.latitude}, ${location.longitude}');
    log('üìç Total markers: ${_registerMarkers.length}');

    // ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏´‡∏°‡πà
    _googleMapController?.animateCamera(
      CameraUpdate.newLatLngZoom(location, 17.0),
    );

    // // ‡πÅ‡∏™‡∏î‡∏á InfoWindow
    // Future.delayed(Duration(milliseconds: 200), () {
    //   _googleMapController?.showMarkerInfoWindow(MarkerId('pickup_location'));
    // });

    log('üîî Notifying listeners...');
    notifyListeners();
  }

  /// ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏•‡∏≤‡∏Å‡∏´‡∏°‡∏∏‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
  void onMarkerDragEnd(LatLng newPosition) {
    log('Marker dragged to: ${newPosition.latitude}, ${newPosition.longitude}');
    _selectedLocation = newPosition;

    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏´‡∏°‡∏∏‡∏î
    _registerMarkers = {
      Marker(
        markerId: MarkerId('pickup_location'),
        position: newPosition,
        infoWindow: InfoWindow(
          title: '‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢',
          snippet:
              '${newPosition.latitude.toStringAsFixed(6)}, ${newPosition.longitude.toStringAsFixed(6)}',
        ),
        icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueRed),
        draggable: true,
        onDragEnd: (position) {
          onMarkerDragEnd(position);
        },
      ),
    };

    notifyListeners();
  }

  /// ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
  void goToCurrentLocation() async {
    if (_googleMapController != null) {
      _googleMapController?.animateCamera(
        CameraUpdate.newLatLngZoom(_currentLocation, 15.0),
      );
    }
  }

  /// ‡∏•‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏∏‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  void clearMarkers() {
    _registerMarkers.clear();
    _selectedLocation = null;
    notifyListeners();
  }

  @override
  void dispose() {
    _registerPickupLocationController.dispose();
    _googleMapController?.dispose();
    super.dispose();
  }
}
